
import { createSuccessResponse, createErrorResponse } from '@/lib/create-response';
import { requestMiddleware } from "@/lib/api-utils";
import { createPostgrestClient } from '@/lib/postgrest';

// POST request - run database migration for missing tables
export const POST = requestMiddleware(async (request, context) => {
  try {
    // Only allow admin users to run migrations
    if (!context.payload?.isAdmin) {
      return createErrorResponse({
        errorMessage: "Admin access required",
        status: 403,
      });
    }

    const client = createPostgrestClient(context.token);
    
    // Check if user_notifications table exists
    try {
      const { error } = await client
        .from('user_notifications')
        .select('id')
        .limit(1);

      if (error && error.message.includes('relation') && error.message.includes('does not exist')) {
        // Table doesn't exist, need to create it
        return createSuccessResponse({
          message: 'user_notifications table missing',
          migration_needed: true,
          sql_command: `
-- Run this SQL command in your database:
CREATE TABLE IF NOT EXISTS app20250904195901yvsuhcayno_v1.user_notifications (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    type VARCHAR(50) NOT NULL CHECK (type IN ('post_published', 'post_failed', 'approval_needed', 'best_time', 'connection_error', 'quota_warning', 'welcome', 'setup_reminder')),
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    data JSONB DEFAULT '{}',
    read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes
CREATE INDEX IF NOT EXISTS idx_user_notifications_user_id ON app20250904195901yvsuhcayno_v1.user_notifications (user_id);
CREATE INDEX IF NOT EXISTS idx_user_notifications_read ON app20250904195901yvsuhcayno_v1.user_notifications (user_id, read);
CREATE INDEX IF NOT EXISTS idx_user_notifications_created_at ON app20250904195901yvsuhcayno_v1.user_notifications (created_at);

-- Grant permissions
GRANT ALL ON app20250904195901yvsuhcayno_v1.user_notifications TO app20250904195901yvsuhcayno_v1_admin_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON app20250904195901yvsuhcayno_v1.user_notifications TO app20250904195901yvsuhcayno_v1_user;
          `.trim()
        });
      }

      return createSuccessResponse({
        message: 'All required tables exist',
        migration_needed: false,
        tables_checked: ['user_notifications'],
        all_tables_ok: true
      });
    } catch (connectionError) {
      return createErrorResponse({
        errorMessage: `Database connection failed: ${connectionError instanceof Error ? connectionError.message : 'Unknown error'}`,
        status: 500,
      });
    }
  } catch (error) {
    console.error('Migration check failed:', error);
    return createErrorResponse({
      errorMessage: "Migration check failed",
      status: 500,
    });
  }
}, true);
